import{s as _,d as v,n as m}from"./scheduler.bb964b1c.js";import{S as g,i as I,d as h,v as N,j as S,k as p,l as z,g as d,m as u,n as f,a as C}from"./index.cbeecc46.js";const X="C:/Users/azgia/OneDrive/바탕 화면/eetimes2/src/lib/components/IconXi.svelte";function l(o){let e,s;const a={c:function(){e=S("i"),this.h()},l:function(t){e=p(t,"I",{class:!0,style:!0}),z(e).forEach(d),this.h()},h:function(){u(e,"class",s="xi xi-"+o[0]+" "+o[1]),f(e,"font-size",o[2]),v(e,X,6,0,108)},m:function(t,i){C(t,e,i)},p:function(t,[i]){i&3&&s!==(s="xi xi-"+t[0]+" "+t[1])&&u(e,"class",s),i&4&&f(e,"font-size",t[2])},i:m,o:m,d:function(t){t&&d(e)}};return h("SvelteRegisterBlock",{block:a,id:l.name,type:"component",source:"",ctx:o}),a}function b(o,e,s){let{$$slots:a={},$$scope:c}=e;N("IconXi",a,[]);let{iconName:t}=e,{addClass:i=""}=e,{fontSize:r="1rem"}=e;o.$$.on_mount.push(function(){t===void 0&&!("iconName"in e||o.$$.bound[o.$$.props.iconName])&&console.warn("<IconXi> was created without expected prop 'iconName'")});const w=["iconName","addClass","fontSize"];return Object.keys(e).forEach(n=>{!~w.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<IconXi> was created with unknown prop '${n}'`)}),o.$$set=n=>{"iconName"in n&&s(0,t=n.iconName),"addClass"in n&&s(1,i=n.addClass),"fontSize"in n&&s(2,r=n.fontSize)},o.$capture_state=()=>({iconName:t,addClass:i,fontSize:r}),o.$inject_state=n=>{"iconName"in n&&s(0,t=n.iconName),"addClass"in n&&s(1,i=n.addClass),"fontSize"in n&&s(2,r=n.fontSize)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[t,i,r]}class j extends g{constructor(e){super(e),I(this,e,b,l,_,{iconName:0,addClass:1,fontSize:2}),h("SvelteRegisterComponent",{component:this,tagName:"IconXi",options:e,id:l.name})}get iconName(){throw new Error("<IconXi>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set iconName(e){throw new Error("<IconXi>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get addClass(){throw new Error("<IconXi>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set addClass(e){throw new Error("<IconXi>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get fontSize(){throw new Error("<IconXi>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set fontSize(e){throw new Error("<IconXi>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{j as I};
